<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="jonglisto">
    <xs:annotation>
      <xs:documentation>configuration of jonglisto-ng</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
      <xs:element type="xs:string" name="servername" maxOccurs="1" minOccurs="0" >
         <xs:annotation>
             <xs:documentation>
                Server name which is used by the VDR discovery. Allows multiple jonglisto-ng instances
                within the same network. Defaults to "jonglisto".
                </xs:documentation>
            </xs:annotation>
        </xs:element>
        <xs:element name="directory">
          <xs:annotation>
            <xs:documentation>
              configuration directory in which jonglisto-ng can
              store some configuration files
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="dir" />
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="configuredVdr">
          <xs:annotation>
            <xs:documentation>
              all available configured VDR instances
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="instance" maxOccurs="unbounded"
                minOccurs="0">
                <xs:annotation>
                  <xs:documentation>
                    name: internal name, used to identify
                    the VDR instance displayName: name,
                    which will be shown in the GUI as
                    selection host: hostname or IP address
                    of the VDR instance port: SVDRP port
                    of the VDR instance
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute type="xs:string"
                        name="name" use="optional" />
                      <xs:attribute type="xs:string"
                        name="displayName" use="optional" />
                      <xs:attribute type="xs:string"
                        name="host" use="optional" />
                      <xs:attribute type="xs:short"
                        name="port" use="optional" />
                      <xs:attribute type="xs:string"
                        name="mac" use="optional" />
                      <xs:attribute type="xs:string"
                        name="osd2web" use="optional" />
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="jonglisto-plugin" maxOccurs="1"
          minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              optional configuration, which SVDRP command of
              vdr-plugin-jonglisto jonglisto-ng are allowed to
              use in the specified VDR. Some commands falls back
              to the VDR implementation other commands will
              raise a notification in the GUI. the pseudo
              commands 'all' and 'none' allows any command or no
              command at all. configuration for epgcollect do
              not exists. Use the default: all, if the plugin
              exists on epgcollect
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="allow" maxOccurs="unbounded"
                minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element type="xs:string"
                      name="command" maxOccurs="unbounded" minOccurs="0" />
                  </xs:sequence>
                  <xs:attribute type="xs:string" name="vdr"
                    use="optional" />
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="epg">
          <xs:annotation>
            <xs:documentation>
              configuration of the VDR instance which are
              responsible for EPG and channel data ref:
              reference to a configured VDR instance, see
              configuredVdr.instance.name updateInterval:
              jonglisto-ng uses an internal cache for EPG and
              channel data. the data will be updated after xxx
              minutes at the latest
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="ref" />
                <xs:attribute type="xs:short"
                  name="updateInterval" />
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="channel">
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="ref" />
                <xs:attribute type="xs:short"
                  name="updateInterval" />
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="epg2vdr">
          <xs:annotation>
            <xs:documentation>
              optional configuration of the epg2vdr database,
              used for e.g. search timers
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="host" />
                <xs:attribute type="xs:short" name="port" />
                <xs:attribute type="xs:string"
                  name="username" />
                <xs:attribute type="xs:string"
                  name="password" />
                <xs:attribute type="xs:string"
                  name="database" />
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="svdrpPort" type="xs:int" maxOccurs="1"
          minOccurs="0">
        </xs:element>
        <xs:element name="startDiscovery" type="xs:boolean" maxOccurs="1" minOccurs="0">
        </xs:element>
        <xs:element name="timezone">
             <xs:complexType>
                <xs:simpleContent>
                    <xs:extension base="xs:string">
                        <xs:attribute type="xs:string" name="tz" />
                    </xs:extension>
                </xs:simpleContent>
            </xs:complexType>
        </xs:element>
        <xs:element name="disableLogin">
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:string">
                <xs:attribute type="xs:string"
                  name="urlUserParam" />
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="scraper" maxOccurs="1" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element type="xs:boolean" name="images" />
              <xs:element name="imagePath" maxOccurs="unbounded"
                minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element type="xs:string"
                      name="replace" />
                    <xs:element type="xs:string"
                      name="to" />
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="epgTimeList">
          <xs:annotation>
            <xs:documentation>
              preconfigured time list used in EPG view to fastly
              select a time value
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element type="xs:string" name="value"
                maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="svdrpCommandList">
          <xs:annotation>
            <xs:documentation>
              preconfigured common SVDRP commands
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element type="xs:string" name="command"
                maxOccurs="unbounded" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="epg-columns">
          <xs:annotation>
            <xs:documentation>
              configuration of epg columns Tested with
              http://www.regexplanet.com/advanced/java/index.html
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="series">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="season">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element
                            type="xs:string" name="pattern" />
                          <xs:element type="xs:byte"
                            name="group" />
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="part">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element
                            type="xs:string" name="pattern" />
                          <xs:element type="xs:byte"
                            name="group" />
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="parts">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element
                            type="xs:string" name="pattern" />
                          <xs:element type="xs:byte"
                            name="group" />
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="genre">
                <xs:annotation>
                  <xs:documentation></xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element type="xs:string"
                      name="pattern" />
                    <xs:element type="xs:byte"
                      name="group" />
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="category">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element type="xs:string"
                      name="pattern" />
                    <xs:element type="xs:byte"
                      name="group" />
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="custom-pattern">
                <xs:annotation>
                  <xs:documentation>
                    Custom patterns and columns
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="custom"
                      maxOccurs="unbounded" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element
                            type="xs:string" name="header" />
                          <xs:element
                            type="xs:string" name="pattern" />
                          <xs:element
                            type="xs:string" name="output" />
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>

