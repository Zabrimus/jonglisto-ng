plugins {
    id 'java'
    id 'war'
    id 'eclipse-wtp'
    id "org.xtext.xtend" version '1.0.21'
}

apply plugin: 'war'

group 'jonglisto-ng'
version '0.2.1-snapshot'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

apply from: "gradle/dependencies.gradle"

configurations.all {
   exclude group:"com.vaadin", module: "vaadin-client"
   exclude group:"com.vaadin", module: "vaadin-client-compiler"
}

dependencies {
    compileOnly "javax.servlet:javax.servlet-api:3.1.0"

    compile libs.guava
    compile libs.xtend

    compile project(':annotation')
    compile project(':common')
    compile project(':web')
    compile project(':svdrp')
    compile project(':database')

    // runtime 'com.vaadin.external.atmosphere:atmosphere-runtime:2.4.11.vaadin2'

    compile(libs.vaadincdi) {
       transitive = false
    }

    compile libs.deltaspike

    compileOnly 'javax.enterprise:cdi-api:1.2'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.xtext.xtend'
    apply plugin: 'eclipse-wtp'

    repositories {
        jcenter()
        mavenCentral()

        maven {
            url "http://maven.vaadin.com/vaadin-addons"
        }

        maven {
            url "https://maven.vaadin.com/vaadin-prereleases"
        }
    }

    sourceSets {
        main.xtendOutputDir = 'src/main/xtend-gen'
        main.java.srcDirs += ['src/main/xtend-gen', 'src/main/resources', 'src/main/java']
    }

    dependencies {
        compile libs.commons
        compile libs.beanutils
        compile libs.collections
        compile libs.tomjdbc
        compile libs.slf4jjdk
    }

    /*
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
    */
}

project(':annotation') {
    dependencies {
        compile libs.xtend
        compile libs.guava
    }
}

project(':common') {
    dependencies {
        compile libs.xtend
        compile libs.gson
        compile libs.guava
        compile libs.sundial
        compile libs.threeten
        compile(libs.cronutils) {
            exclude group:'org.threeten', module:'threetenbp'
        }

        compile project(':annotation')
    }
}

project(':svdrp') {
    dependencies {
        compile libs.xtend
        compile libs.guava

        compile project(':annotation')
        compile project(':common')
    }
}

project(':database') {
    dependencies {
        compile libs.xtend
        compile libs.guava
        compile libs.sql2o
        compile libs.mysqljdbc

        compile project(':annotation')
        compile project(':common')
    }
}

project(':web') {
    dependencies {
        compile project(':annotation')
        compile project(':common')
        compile project(':svdrp')
        compile project(':database')

        compile libs.vaadinServer
        compile libs.vaadinThemes
        compile libs.vaadinClient
        compile libs.shirocore
        compile libs.shiroweb
        compile libs.sanitizer
        compile libs.guava
        compile libs.xtend
        compile libs.sundial
        compile libs.threeten
        compile(libs.cronutils) {
            exclude group:'org.threeten', module:'threetenbp'
        }

        compile addons.vicons

        compile(addons.scaleimage) {
            transitive = false
        }

        compile(addons.messagebox) {
            transitive = false
        }

        compile(libs.vaadincdi) {
            transitive = false
        }

        compile libs.deltaspike

        compileOnly 'javax.enterprise:cdi-api:1.2'
        compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
        compileOnly "com.vaadin:vaadin-client:$versions.vaadin"
        compileOnly "com.vaadin:vaadin-client-compiler:$versions.vaadin"
    }
}

task createLogos(type: Exec) {
  executable "sh"
  args "-c", "cd tools; ./build-logo-jar.sh"
}

task deleteLogos(type: Exec) {
  executable "sh"
  args "-c", "cd src/main/webapp/VAADIN/themes/jonglisto/channellogo; rm *.png"
}

task copySamples(type: Exec) {
  executable "sh"
  args "-c", "cp samples/* build/libs"
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.2.1'
}
